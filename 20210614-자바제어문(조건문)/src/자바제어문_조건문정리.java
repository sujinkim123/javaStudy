/*
 * 	1. 8 page
 *     =======
 *     실행 과정
 *     
 *     Hello.java ========= Hello.class ========= 화면 출력
 *                 javac                  java
 *                          ===========
 *                          바이트 코드 => 배포 (C언어: .exe , 안드로이드: .apk)
 *     9 page
 *     프로그램의 시작점 => main()
 *      
 *     20 page
 *     변수: 한 개의 데이터를 저장하는 메모리 공간
 *     
 *     21 page
 *     변수의 초기화 (지역변수 => 반드시 초기화)
 *            ======
 *            - 직접 입력
 *            - 난수 발생
 *            - 사용자 입력값
 *     
 *     22 page 두 변수 값 교환
 *     	==> 임시변수 설정
 *     	int a=10;
 *     	int b=20;
 *     	int tmp=a; // tmp=10
 *     	a=b;		   // a=20
 *     	b=tmp;     // b=10
 *     	=================================> 정렬 (sort)
 *     
 *     25 page
 *     	변수 명칭법 (클래스명, 메소드명, 변수, 인터페이스, 열거형)
 *      1) 알파벳 , 한글로 시작 (알파벳은 대소문자 구분)
 *      2) 숫자를 사용할 수 있다 (앞에 사용 금지)
 *      3) 특수문자 _ , $
 *      4) 키워드는 사용 할 수 없다 (int , double ...)
 *      
 *     27 page
 *      기본형 / 참조형(배울 예정)
 *      ======
 *      정수 , 실수 , 문자 , 논리
 *      
 *     29 page 도표
 *           1byte => -128 ~ 127
 *           2byte => -32768 ~ 32767
 *           4byte => -21억 4천 ~ 21억 4천
 *           8byte => -2^63 ~ 2^63-1
 *           
 *           char => 음수가 없다
 *                   0~65535 => 'A' 65 , 'a' 97 , '0' 48
 *        =================================================
 *                      1byte    2byte    4byte      8byte
 *        =================================================
 *           정수       byte     short     int       long 
 *        =================================================
 *           실수                         float     double
 *        =================================================
 *           문자                 char
 *        =================================================
 *           논리      boolean
 *        =================================================
 *        
 *        30 page
 *           변수/상수 (변경할 수 없는 값)
 *           int a=10;	// 변수
 *           final int b=100;	// 상수
 *           
 *        34 page
 *           char => ''
 *           String => ""
 *           ============== 문자열 결합(앞 또는 뒤에 붙이는 연산자)
 *           문자열 + 데이터형(any) => 문자열
 *                    ============== 기본형 모든 데이터형
 *           데이터형(any) + 문자열 => 문자열
 *           
 *           => "결과:" + true ==> "결과:true"
 *           => "결과:" + 10 ==> "결과:10"
 *           
 *        35 page
 *           화면
 *           System.out.print() => 가로 출력 (\n이 없다)
 *           System.out.println() => 세로 출력 (\n을 포함한다)
 *           System.out.printf() => \n이 존재하지 않는다
 *                      ========
 *                      출력 서식을 만들고 싶은 경우
 *                      
 *        40 page
 *          Scanner
 *          => 입력값을 받는 기능
 *             문자열 : next()
 *             정수 : nextInt()
 *             실수 : nextDouble()
 *             논리 : nextBoolean()
 *             
 *        57 page
 *           특수문자
 *            \t : 일정 간격 => tab
 *            \n : new Line => 다음 줄에 출력
 *            \\ : 경로명
 *            \" : "를 출력 (인용부호)
 *            
 *        82 page
 *           자동형변환
 *           ========== 작은 데이터형 => 큰데이터형으로 변경
 *           int a='A' => 'A'=>65
 *           double d=10 => 10=>10.0
 *           
 *        83 page 크기 (boolean 제외)
 *        byte < short, char < int< long < float < double
 *     ===================================================================== 변수, 데이터형 (데이터 저장)
 *  	  데이터 가공
 *        1) 연산자
 *           87~97 page 산술연산자
 *           ==================
 *             / => 0으로 나눌 수 없다 , 정수/정수=정수
 *             % => 부호는 반드시 왼쪽편 부호를 따라간다
 *             ** int 이하 연산자 => 결과값: int
 *             byte + byte = int , char + byte = int ...
 *           참조 : 92 page
 *           ============================================
 *           93 => 단항연산자
 *                 = ++ ,-- : 반복문에서 주로 사용 ==> 대입 먼저 , 증가 먼저
 *                 = ! => 부정연산자 ==> 에매 , 로그인 , 장바구니...
 *                 = 형변환 (데이터형 형변환 보다 => 클래스에 형변환)
 *           102 page => 문자 (코드번호)
 *                       'A' => 65
 *                       'a' => 97    'b(98)
 *                       '0' => 48    '1'(49)
 *           109 page : 비교 연산자 (== , != , < , > , <= , >=) => if문 , 반복문(for)
 *                      문자열 비교 => equals(): 메소드 (웹, 모바일 ==> 모든 데이터가 문자열)
 *           114 page : 논리연산자 ( && , ||)
 *                       (조건) && (조건)
 *                       ======    =======
 *                          1         2
 *                          ============
 *                            결과값 ====> && 1,2번 true일 때만 true (직렬)00000000000000000000
 *                            
 *                       (조건) || (조건)
 *                       =======    ======
 *                          1         2
 *                          ============
 *                            결과값 ======> || 1이나 2번 둘 중에 1개만 true이면 true (병렬)
 *                            
 *                       ==> 범위 , 기간 (포함 : && , 미포함 : ||)
 *
 *            132 page : 대입
 *                       = : 대입
 *                       += : +후 대입
 *                       int a =10;
 *                       a+=5 ==> a=a+5 ==> a=15
 *                       -= : -후 대입
 *                       a-=5 ==> a=a-5 ==> a=5
 *                       ===> 누적 (합) ,문자열 결합 (메뉴)
 *                       
 *                       서버 : 스프링 (데이터베이스 연동, 데이터 수집) ===> Front (Vue, React)
 *                                                                    JSON / JSONP
 *            136 page : 제어문
 *                  if
 *                  형식) if(조건문) => 연산자 (부정연산자, 논리연산자, 비교연산자)
 *                        {
 *                           조건이 true일 경우에 처리하는 문장 => false 점프
 *                        }
 *                        예시) 조건 ==> 137 page
 *            138~139 page ==> * 자바에서 사용하는 모든 제어문은 바로 밑에 있는 문장만 제어
 *                           여러개의 실행문장을 동시에 제어 ==> {}
 *                           ==============
 *                           if(조건)
 *                               실행문장1
 *                           ==============
 *                               실행문장2 => if와 관련이 없는 문장
 *                               
 *                               if(조건) {
 *                                   실행문장1
 *                                   실행문장2
 *                               }
 *        2) 제어문
 *     =================== 모아서 처리
 *        변수 => 여러개 동시 저장 (배열, 클래스)
 *        연산자 + 제어문 => 메소드
 *     ============================================== 클래스   
 */
public class 자바제어문_조건문정리 {
	public static void main(String[] args) {
		System.out.println("90 90 90");
		// 41 page
		// - : 왼쪽 정렬 , + : 오른쪽 정렬
		// %s(문자열)  %c(문자)  %f(실수)  %d(정수)
		// 5.2f ==> 5 => 소수점 2 ==> 100.10  2.10  2.90
		System.out.printf("%-3d%-3d%-3d\n", 90, 90, 90);
		System.out.printf("%02d\n", 1);
		/*
		 * 		3d
		 *      000
		 *      -3d
		 */     
	}
}
