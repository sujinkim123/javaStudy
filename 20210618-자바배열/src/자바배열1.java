/*
 *    182 page
 *    =========
 *    1) 저장된 데이터가 많은 경우 문제점
 *          => 변수명이 많이 존재 => 관리하기 어렵다
 *          => 한 개의 이름으로 모든 변수를 관리할 수 있게 만든다
 *          => 데이터 묶어서 사용
 *             = 배열 : 같은 데이터형을 묶어서 사용
 *             = 클래스 : 다른 데이터형을 묶어서 사용
 *       변수 (한개) ====> 배열 ====> 구조체 ====> 클래스
 *                              ------------ C / C++ (자바 구조체가 없다)
 *             => 명령문 ( ;이 있는 경우에 명령 한개가 종료 ) 을 모아서 처리
 *                ===> 메소드
 *             => 배열 , 변수 , 메소드 ======> 클래스
 *             
 *     2) 배열 => 1차원 , 2차원 , 다차원 , 가변 배열
 *                -----
 *                배열 단점 : 고정 , 같은 데이터형만 모아서 사용 가능
 *                            단점을 보완 ==> 컬렉션 (중심) : 가변 ==> 웹에서 기본
 *                                            =============
 *                                            List : 순서가 있다 , 중복 허용
 *                                            Set : 순서가 없다 , 중복을 허용하지 않는다
 *                                            Map : key , value ===> JSON (모바일과 서버 연결)
 *             => 사용처 : 같은 유형 데이터가 3개 이상 (배열)
 *     3) 배열 선언
 *             데이터형[] 배열명;   예) int[] arr;  ==> 저장할 수 있는 데이터 (byte, short, char, int)
 *                => 권장 사항          byte[] arr;
 *                                      char[] arr;
 *                                      long[] arr;
 *                                      double[] arr;
 *                                      boolean[] arr;
 *                                             === 여러개 데이터를 한번에 저장 => arr 이름을 모든 데이터 제어
 *             데이터형 배열명[] :  예) char arr[]; 
 *                => C언어 호환
 *     4) 배열 초기화
 *          => 선언과 동시에 배열의 초기화
 *             int[] arr = {1, 2, 3, 4, 5}; ==> 5개의 데이터를 한번에 저장
 *          => 선언 => 나중에 값을 채운다
 *             int[] arr = new int[5]; ==> 5개의 데이터가 모두 0으로 초기화
 *                                 == 저장 개수는 반드시 선언
 *          => 메모리에 배치될 때 일반 변수와 다르다
 *             연속적인 메모리 공간  ==> index 번호를 이용해서 처리
 *             
 *          => 
 *             int[] arr;
 *             
 *             =====arr=====
 *             
 *             =====arr=====
 *             arr = new int[5];
 *                                ==========================================
 *                                  0     |   0   |  100   |    0   |   0  
 *                               |==========================================
 *                               100번지  104     108      112      116
 *                                arr+0   arr+1   arr+2    arr+3    arr=4 
 *                                      +1(4byte) 100+8    100+12   100+16
 *                                arr[0]  arr[1]  arr[2]   arr[3]   arr[4]   ===> 일반 변수와 동일
 *                                
 *                                arr[2]=100
 *                                
 *                                각 데이터 저장 위치마다 => 번호가 부여 ===> 인덱스, 첨자
 *                                    인덱스번호는 0부터 시작
 *                                    인덱스번호를 초과하면 ArrayIndexOufOfBoundsException(프로그래머 실수)
 *     5) 배열 데이터 출력
 *          => for , for~each
 *          int[] arr = {10, 20, 30, 40, 50}; ==> 연속적으로 5개 저장한다
 *                      arr[0] arr[1] arr[2] arr[3] arr[4] ===> index 번호는 "arr.length-1"
 *          
 *          일반 for
 *          for (int i=0; i<5; i+=) {   ===> 일반 for (index번호 이용) ==> 배열에 저장된 데이터 변경
 *              System.out.println(arr[i]);
 *          }
 *          향상된 for : => 출력만 담당(데이터값 변경이 불가능, 데이터 추가 불가능) : 브라우저, 모바일
 *               => 데이터는 자바로 다루고 => 결과값만 브라우저에 전송 (JSP)
 *               
 *          형식)
 *                for(데이터형 변수명 : 배열명)
 *                예) int[] arr = {10, 20, 30, 40, 50};
 *                        ==> int, long, float, double (같거나 큰 데이터형으로 받을 수 있다)
 *                    for(int a: arr) {
 *                        ====== 실제 배열에 저장된 데이터값을 가지고 온다 (인덱스를 사용하지 않는다)
 *                    }
 *     6) 배열 값을 변경 
 *               int[] arr = {10, 20, 30, 40, 50};
 *                                        --- 100 변경
 *               arr[3]=100; ===> 일반 변수와 동일 취급
 *               arr[4]=500;
 *               
 *               ==> 클래스를 한개의 이름으로 처리 (배열(X), 인터페이스) 스프링 (기반, 인터페이스, XML, Annotation)
 */
public class 자바배열1 {

	/* public static void main(String[] args) throws Exception {
		Runtime.getRuntime().exec("C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe http://daum.net");
	*/
	public static void main(String[] args) {
		// 1. 배열 선언
		int[] arr = new int[5];	// 연속적으로 메모리에 5개의 정수를 저장한다
		
		// 2. 데이터를 변경 ====> 일반 for문을 이용한다 (배열의 index를 이용한다)
		// length => 배열 선언 시 등록된 개수
		for (int i=0; i < arr.length; i++) {
			arr[i] = (int)(Math.random()*100)+1; // 1~100까지 사이의 값으로 변경
		}
		
		/*
		 *  new를 사용하게 되면 
		 *  자동으로 초기화
		 *  byte    ===> 0
		 *  short   ===> 0
		 *  int     ===> 0
		 *  long    ===> 0L
		 *  float   ===> 0.0F
		 *  double  ===> 0.0
		 *  char    ===> ' '
		 *  boolean ===> false
		 */
			
		// 출력 전용 ==> 배열에 저장된 실제 데이터를 한개씩 읽어온다
		for (int a : arr) {
			System.out.println(a);
		}
	}
}