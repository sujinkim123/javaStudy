/*
 * 평문		조건문 		반복문	==>	기능별로 나눠서 출력(메소드) (재사용)
 * Application : dos, window => 네트워크(쓰레드), IO
 * Web : 데이터베이스 , HTML
 * Mobile : 네트워크 , 데이터베이스 (XML, JSON) => JS
 * 
 * 변수 : 한 개의 데이터를 저장하는 메모리 공간
 *        변경할 수 있는 값
 *        
 *        설정
 *        데이터형(메모리 크기) 변수명=값;
 * 상수 : 한 개의 데이터를 저장하는 메모리 공간    
 *        변경할 수 없는 값 (서버 IP, 오라클 주소...)
 *        final 데이터형(메모리 크기) 변수명=값;
 *        ===== 상수
 *        
 * 메모리 크기 (기본 데이터형 / 기본 자료형) => 자바에서 설정된 데이터 크기
 * 
 *         
 *   프로그램
 *   ================
 *   1. 변수 => 메모리에 저장 => 메모리 크기 결정(종류설정)
 *   ===========
 *   2. 연산자
 *   3. 제어문
 *   =========== 메소드
 *   =========================== 클래스 (재사용) => 객체지향프로그램
 *   
 *   데이터 저장 종류
 *   정수형
 *     byte (1byte) => -128~127 : 네트워크 통신, 파일 입출력, 파일전송
 *     short (2byte) => C언어 호환 => -32768~32767
 *     * int (4byte) => default : 평상시에 컴퓨터에 숫자 사용하면 인식하는 데이터형 (많이 사용)
 *                 => -21억 4천 ~ 21억 4천
 *     long (8byte) => 빅데이터, 데이터 수집 ... (금융권) => 많이 사용
 *     * int / long => 숫자 뒤에 (100(int), 100L(long), 1001(long))
 *   실수형
 *     float : (4byte) => 소수점 이하 (6자리)
 *     double : (8btye) => 소수점 이하 (15자리) ===> 평상시에 사용하는 실수	10.5 (default)
 *   문자형
 *     char : (멀티바이트) => 2byte
 *            ============
 *            싱글바이트 (1byte) => ASCII (0~255)
 *            멀티바이트 (2byte) => Unicode (0~65535) : 모든 언어(한국어, 일본어, 중국어...) UTF-8
 *            => '' : 한 글자 저장 (int와 호환) 문자마다 고유번호
 *                    'A' , 'a' , '0'
 *                    ===   ===   ==
 *                    65    97    48  
 *   논리형 
 *     true / false 저장 : 1byte ( true/1 , false/0 ) => 형변환 제외 (독립적으로 사용) 
 *   ===============================
 *   참조형 (배열, 클래스) => String
 *   ==> 데이터 수집 => 통계(단어별)
 *   
 *   변수를 설정
 *   ===========
 *   1. 데이터형 (메모리 크기) 변수명 = 값
 *      국어 점수
 *      int kor = 80; => 4btye 메모리에 80을 저장한다 , kor으로 메모리 설정
 *      kor = 90; 
 *  
 *   2. 이름을 저장
 *      홍길동
 *      char f = '홍';
 *      char s = '길';
 *      char t = '동';
 *      => String name = "홍길동";
 *   
 *   3. 평균
 *      85.5 => double
 *      double avg = 85.5D;	(D, d는 생략 가능)
 *      float avg = 85.5f;
 *      
 *   4. true/false : 조건문 6 < 7 ==> true
 *      boolean bCheck = true;
 *      boolean bCheck = false;
 *      
 *      기본 데이터형
 *      =============
 *      
 *      ===============================================================
 *                 1byte	 2byte	  4byte 	     8btye
 *      ===============================================================
 *      정수형      byte     short     int           long(L,l)
 *                 ================
 *                 범위 초과하지 않는다
 *                 byte => -127 ~ 128
 *                 short => -32768 ~ 32767
 *      
 *      ===============================================================
 *      실수형                      float(F,f)       double(D,d,생략)
 *      ===============================================================
 *      문자형               char => 문자 1개 저장
 *      ===============================================================
 *      논리형    boolean => true/false : 비교연산, 논리연산, 부정
 *                로그인, 아이디중복체크, 비밀번호 체크 ....
 *      ===============================================================
 *      => 대표적으로 사용하는 데이터형
 *         네트워크, 파일 => byte (파일업로드, 파일 다운로드)
 *         웹, 코틀린 : int, double, boolean, String
 *      
 *      => ******** 암기!!!!! 데이터형의 크기 (중요!!!) ********
 *         정수/문자/실수
 *         byte < char, short < int < long  < float  < double
 *         ================================  ================= 수의 표현
 *                                      1    1.000000
 *                                           1.111111
 *                                           1.000001
 *         UP Casting (데이터형 높게)
 *         Down Casting (데이터형 낮게)
 *         
 *         => char c = 'A';	=> int i = (int)'A';
 *            char c = (char)65;
 *         => int avg = (int)(100 / 3.0);
 */

public class 자바데이터형 {
	public static void main(String[] args) {
		byte b = (byte) 300;
		short s = 100; // 일반 숫자 => byte, short, int => long : L
		double d = 85.5D; // D, F, L
		System.out.println(b);
		/*
		 * ======================================================= 
		 * 256   128   64   32   16   8   4   2   1(0)
		 * =======================================================
		 *  1     0     0    1    0   1   1   0    0
		 *       =====================================
		 *                   32   +   8 + 4  ==> 44
		 */
		
		/* 국어, 수학, 영어 점수를 입력받아서 총점(int), 평균(double), 등수, 학점
		 * ================                   ==========
		 * => int									                    int  char
		 * 
		 */
	}
}
